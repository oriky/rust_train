/**
给你一个整数数组 nums ，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次 。请你找出并返回那个只出现了一次的元素。

你必须设计并实现线性时间复杂度的算法且使用常数级空间来解决此问题。

1 <= nums.length <= 3 * 10^4
-2^31 <= nums[i] <= 2^31 - 1
*/
pub fn single_number(nums: Vec<i32>) -> i32 {
    let mut res = 0;

    res
}